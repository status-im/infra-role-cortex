---
- name: Get Consul data centers
  uri:
    url: '{{ consul_catalog_url }}/datacenters'
  register: data_centers

- name: Get Memcached service addresses
  uri:
    # WARNING: The tag is important to not match other clusters.
    url: '{{ cortex_consul_catalog_url }}/service/memcached?tag={{ cortex_memcached_tag }}&dc={{ item }}'
  with_items: '{{ data_centers.json }}'
  vars:
    cortex_memcached_tag: |-
      {{ "cortex-query" if "querier" in cortex_target_modules else "cortex-frontend" }}
  register: cortex_memcached_services_raw

- name: Get ETCD service addresses
  uri:
    # WARNING: The tag is important to not match other clusters.
    url: '{{ cortex_consul_catalog_url }}/service/etcd-api?tag=cortex'
  register: cortex_etcd_services_raw

- name: Extract Memcached IP and port
  set_fact:
    cortex_memcached_addresses: |
      {{ cortex_memcached_services_raw.results
      | sum(attribute="json", start=[])
      | json_query("[].[ServiceAddress, ServicePort]")
      | map('join', ':') | list }}
    cortex_etcd_addresses: |
      {{ cortex_etcd_services_raw.json
      | json_query("[].[ServiceAddress, ServicePort]")
      | map('join', ':') | list }}

- when: >
    "all" == cortex_target_modules or
    "querier" in cortex_target_modules
  block:
    - name: Get Query Frontend service addresses
      uri:
        url: '{{ cortex_consul_catalog_url }}/service/cortex?tag=query-frontend'
      register: qf_services

    - name: Extract Query Frontend IP and port
      set_fact:
        cortex_query_frontend_addr: '{{ qf_services.json[0]["ServiceAddress"] }}'
        cortex_query_frontend_port: '{{ qf_services.json[0]["ServiceMeta"]["grpc_port"] }}'
