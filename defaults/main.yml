---
cortex_service_name: 'cortex'
cortex_service_user: 'cortex'
cortex_config_dir: '/etc/{{ cortex_service_name }}'
cortex_config_file: '{{ cortex_config_dir }}/config.yml'
cortex_data_dir: '/var/tmp/{{ cortex_service_name }}'
cortex_wal_dir: '{{ cortex_data_dir }}/wal'
cortex_compact_dir: '{{ cortex_data_dir }}/compact'

cortex_version: '1.16.0'
cortex_bin_url: 'https://github.com/cortexproject/cortex/releases/download/v{{ cortex_version }}/cortex-linux-amd64'
cortex_bin_sha256: '2d9eeef7ac14132301b0449b685a3ace62b853e5e8cbb50fa1b257ba84131f4b'
cortex_bin_path: '/usr/local/bin/cortex'

# List of modules/services to load at startup.
cortex_target_modules: ['all']

# Viable values: debug, info, warn, error
cortex_log_level: 'info'
cortex_listen_port: 9092
cortex_grpc_port: 9095
cortex_listen_interfaces: ['wg0']
cortex_extra_after_services: ['wg-quick@wg0.service']
cortex_compression: 'gzip'

# Limits
cortex_max_metadata_per_user: 8000
cortex_old_samples_max_age: '2w'
cortex_out_of_order_time_window: '0s'
cortex_blocks_storage_retention: 0
cortex_max_series_per_metric: 30000
cortex_max_series_per_user: 5000000

# Service Limits
cortex_memory_ratio: 0.95
cortex_memory_limit: '{{ (ansible_memtotal_mb * cortex_memory_ratio|float) | int }}MiB'

# Blocks Storage
#cortex_blocks_storage_endpoint: 'ams3.digitaloceanspaces.com'
#cortex_blocks_storage_bucket: ~
#cortex_blocks_storage_key_id: ~
#cortex_blocks_storage_secret: ~

# AlertManager configuration
cortex_alertmanager_url: ~
cortex_alertmanager_addr: ~
cortex_alertmanager_port: ~

# ETCD
cortex_etcd_user: 'cortex'
#cortex_etcd_pass: ~
# TODO Use Consul to query for ETCD endpoints.
cortex_etcd_endpoints: []

# Consul
cortex_consul_port: 8500
cortex_consul_host: 'localhost'
cortex_consul_addr: '{{ cortex_consul_host }}:{{ cortex_consul_port }}'
cortex_consul_catalog_url: 'http://{{ cortex_consul_addr }}/v1/catalog'
